var moneyFormat = '{{ shop.money_format }}';

/* Modernizr 2.8.2 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-fontface-csstransforms-csstransforms3d-touch-cssclasses-teststyles-testprop-testallprops-prefixes-domprefixes-cssclassprefix:supports!
 */
;window.Modernizr=function(a,b,c){function z(a){j.cssText=a}function A(a,b){return z(m.join(a+";")+(b||""))}function B(a,b){return typeof a===b}function C(a,b){return!!~(""+a).indexOf(b)}function D(a,b){for(var d in a){var e=a[d];if(!C(e,"-")&&j[e]!==c)return b=="pfx"?e:!0}return!1}function E(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:B(f,"function")?f.bind(d||b):f}return!1}function F(a,b,c){var d=a.charAt(0).toUpperCase()+a.slice(1),e=(a+" "+o.join(d+" ")+d).split(" ");return B(b,"string")||B(b,"undefined")?D(e,b):(e=(a+" "+p.join(d+" ")+d).split(" "),E(e,b,c))}var d="2.8.2",e={},f=!0,g=b.documentElement,h="modernizr",i=b.createElement(h),j=i.style,k,l={}.toString,m=" -webkit- -moz- -o- -ms- ".split(" "),n="Webkit Moz O ms",o=n.split(" "),p=n.toLowerCase().split(" "),q={},r={},s={},t=[],u=t.slice,v,w=function(a,c,d,e){var f,i,j,k,l=b.createElement("div"),m=b.body,n=m||b.createElement("body");if(parseInt(d,10))while(d--)j=b.createElement("div"),j.id=e?e[d]:h+(d+1),l.appendChild(j);return f=["&#173;",'<style id="s',h,'">',a,"</style>"].join(""),l.id=h,(m?l:n).innerHTML+=f,n.appendChild(l),m||(n.style.background="",n.style.overflow="hidden",k=g.style.overflow,g.style.overflow="hidden",g.appendChild(n)),i=c(l,a),m?l.parentNode.removeChild(l):(n.parentNode.removeChild(n),g.style.overflow=k),!!i},x={}.hasOwnProperty,y;!B(x,"undefined")&&!B(x.call,"undefined")?y=function(a,b){return x.call(a,b)}:y=function(a,b){return b in a&&B(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=u.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(u.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(u.call(arguments)))};return e}),q.touch=function(){var c;return"ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch?c=!0:w(["@media (",m.join("touch-enabled),("),h,")","{#modernizr{top:9px;position:absolute}}"].join(""),function(a){c=a.offsetTop===9}),c},q.csstransforms=function(){return!!F("transform")},q.csstransforms3d=function(){var a=!!F("perspective");return a&&"webkitPerspective"in g.style&&w("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(b,c){a=b.offsetLeft===9&&b.offsetHeight===3}),a},q.fontface=function(){var a;return w('@font-face {font-family:"font";src:url("https://")}',function(c,d){var e=b.getElementById("smodernizr"),f=e.sheet||e.styleSheet,g=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"";a=/src/i.test(g)&&g.indexOf(d.split(" ")[0])===0}),a};for(var G in q)y(q,G)&&(v=G.toLowerCase(),e[v]=q[G](),t.push((e[v]?"":"no-")+v));return e.addTest=function(a,b){if(typeof a=="object")for(var d in a)y(a,d)&&e.addTest(d,a[d]);else{a=a.toLowerCase();if(e[a]!==c)return e;b=typeof b=="function"?b():b,typeof f!="undefined"&&f&&(g.className+=" supports-"+(b?"":"no-")+a),e[a]=b}return e},z(""),i=k=null,e._version=d,e._prefixes=m,e._domPrefixes=p,e._cssomPrefixes=o,e.testProp=function(a){return D([a])},e.testAllProps=F,e.testStyles=w,g.className=g.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(f?" supports-js supports-"+t.join(" supports-"):""),e}(this,this.document);


/* visial options */

var variants = {},
images = [],
defaultVariant = null,

preload = function(url) {
  if (url) {
    images[url] = new Image();
    images[url].src = url;
  }
},

values = function(hash) {
  return $.map(hash, function(value, key) {
    return value;
  });
},

norm = function(value) {
  return value.replace(/[ .\/]/g, '').replace(/ß/, 's').replace(/ü/, 'u');
},

addVariant = function(variant){
  var key = variantKey(variant);

  if (!defaultVariant || !defaultVariant.available) {
    defaultVariant = variant;
  }
  preload(variant.image);
  renderButtons(variant);
  variants[key] = variant;
},

optionKeys = function() {
  return $('#options div').map(function() {
    return $(this).first().find('input').attr('name');
  });
},

option = function(optionKey, optionValue) {
  return $('#options .' + optionKey + ' .option').filter(function() {
    return $(this).find('input[value=' + norm(optionValue) + ']')[0];
  });
},

variantKey = function(variant) {
  return $.map(variant.options, function(optionValue, optionKey) {
    return norm(optionValue);
  }).join('-');
},

currentOptionValue = function(optionKey) {
  var elements = $('#options .' + optionKey + ' .option'),
  element = elements.filter('.over')[0] || elements.filter('.active')[0];

  return $(element).find('input').val();
},

currentVariantKey = function() {
  return $.map(optionKeys(), function(optionKey) {
    return currentOptionValue(optionKey);
  }).join('-');
},

update = function() {
  var key = currentVariantKey(),
  toggleElement = $('#product'),
  variant = variants[key];
  if (variant) {
    $('#productSelect').val(variant.id);
    if (variant.image) {
      $('#productPhoto img[src*="/products/"]:first').attr('src', variant.image);
    }
    toggleElement.toggleClass('unavailable', variant.quantity < 1 && !variant.available);
    toggleElement.toggleClass('preorder',    variant.quantity < 1 && variant.available);
    toggleElement.toggleClass('onsale',     variant.onSale);
    $('#productPrice').html(variant.price);
    $('#comparePrice').html(variant.comparePrice);
  }
  else {
    toggleElement.addClass('unavailable');
  }
},

setAvailability = function(optionKey, possibleVariants) {
  var elements = $('#options .' + optionKey + ' .option'),
  sibblingVariants = [];

  elements.trigger('availability', false);
  sibblingVariants = $.grep(possibleVariants, function(variant) {
    return option(optionKey, variant.options[optionKey])
      .trigger('availability', variant.available)
      .hasClass('active');
  });
  elements.trigger('resolveAvailabilityConflict');
  return sibblingVariants;
},

setAvailabilites = function() {
  var possibleVariants = values(variants);

  $.each(optionKeys(), function(index, optionKey) {
    possibleVariants = setAvailability(optionKey, possibleVariants);
  });
},

toggleClassName = function(node, className) {
  return node.addClass(className).siblings().removeClass(className).end();
},

renderButton = function(optionKey, optionValue, display) {
  var button = $('<input type="radio" name="' + optionKey + '" value="' + optionValue +'">');

  return $('<label class="btn--secondary option optionValue' + optionValue + '">')
    .attr('title', optionKey + ': ' + display)
    .append(button, $('<span>' + display + '</span>'))
    .on('click', function(event) {
      $(this).not('.unavailable').not('.active').each(function() {
        toggleClassName($(this), 'active')
          .find('input:radio')
            .prop('checked', true)
            .siblings()
            .prop('checked', false);
        update();
        setAvailabilites();
      });
    }).on('mouseover', function() {
      $(this).not('.unavailable').not('.active').each(function() {
        toggleClassName($(this), 'over');
        update();
      });
    }).on('mouseout', function() {
      $(this).not('.unavailable').not('.active').each(function() {
        $(this).removeClass('over');
        update();
      });
    })
    .on('availability', function(event, available) {
      $(this)
        .toggleClass('unavailable', !available)
        .toggleClass('disabled', !available)
        .find('input:radio')
          .attr('disabled', !available);
    })
    .on('resolveAvailabilityConflict', function() {
      $(this).filter('.active.unavailable').each(function() {
        $(this)
          .siblings().not('.unavailable').first()
          .click();
      });
    });
},

renderButtons = function(variant) {
  $.each(variant.options, function(optionKey, value) {
    var optionValue = norm(value);
    $('#options div.' + optionKey)
      .filter(function() {
        return !$(this).find('input[value=' + optionValue + ']')[0];
      })
      .append(function() {
        return renderButton(optionKey, optionValue, value);
      });
  });
},

init = function(variant) {
  $.each(variant.options, function(optionKey, optionValue) {
    $('#options select.' + optionKey).hide();
    option(optionKey, optionValue)
      .click();
  });
};

/* shop  */

window.timber = window.timber || {};

timber.cacheSelectors = function () {
  timber.cache = {
    // General
    $html: $('html'),
    $body: $('body'),
    $breadcrumbs: $('.breadcrumb'),

    // Navigation
    $navigation: $('#AccessibleNav'),
    $hasDropdownItem: $('.site-nav--has-dropdown'),
    $menuToggle: $('.menu-toggle'),

    // Home Page
    $slider: $('.flexslider'),

    // Product Page
    $productImageWrap: $('#productPhoto'),
    $productImage: $('#ProductPhotoImg'),
    //  TBD $thumbImages: $('#ProductThumbs').find('a.product-single__thumbnail')
    $thumbImages: $('#productThumbs').find('a.product-photo-thumb'),
    $shareButtons: $('.social-sharing'),

    // Collection Pages
    $collectionFilters: $('#collectionFilters'),
    $toggleFilterBtn: $('#toggleFilters'),

    // Equal height elements
    $featuredBoxes: $('.featured-box'),
    $featuredImages: $('.featured-box--image'),
    $productGridImages: $('.product-grid-image')
  };
};

timber.init = function () {
  timber.cacheSelectors();

  timber.cache.$html.removeClass('no-js').addClass('js');
  if ('ontouchstart' in window) {
    timber.cache.$html.removeClass('no-touch').addClass('touch');
  }
  timber.toggleMenu();
  timber.accessibleNav();

  //timber.sliders();
  // timber.equalHeights();
  // timber.toggleFilters();

  // timber.productImageSwitch();
  // timber.responsiveVideos();

  // Wait until fonts load to attempt creating 'more' link in nav
  // $(window).load(function() {
  //   timber.responsiveNav();
  // });

  {% if settings.product_image_zoom_enable %}
  // timber.productImageZoom();
  {% endif %}

  {% if settings.social_sharing_products or settings.social_sharing_blog %}
    timber.socialSharing();
  {% endif %}
};

timber.accessibleNav = function () {
  var $nav = timber.cache.$navigation,
      $allLinks = $nav.find('a'),
      $topLevel = $nav.children('li').find('a'),
      $parents = $nav.find('.site-nav--has-dropdown'),
      $subMenuLinks = $nav.find('.site-nav__dropdown').find('a'),
      activeClass = 'nav-hover',
      focusClass = 'nav-focus';

  // Mouseenter
  $parents.on('mouseenter touchstart', function(evt) {
    var $el = $(this);

    if (!$el.hasClass(activeClass)) {
      evt.preventDefault();
    }

    showDropdown($el);
  });

  // Mouseout
  $parents.on('mouseleave', function() {
    hideDropdown($(this));
  });

  $subMenuLinks.on('touchstart', function(evt) {
    // Prevent touchstart on body from firing instead of link
    evt.stopImmediatePropagation();
  });

  $allLinks.focus(function() {
    handleFocus($(this));
  });

  $allLinks.blur(function() {
    removeFocus($topLevel);
  });

  // accessibleNav private methods
  function handleFocus ($el) {
    var $subMenu = $el.next('ul'),
        hasSubMenu = $subMenu.hasClass('sub-nav') ? true : false,
        isSubItem = $('.site-nav__dropdown').has($el).length,
        $newFocus = null;

    // Add focus class for top level items, or keep menu shown
    if (!isSubItem) {
      removeFocus($topLevel);
      addFocus($el);
    } else {
      $newFocus = $el.closest('.site-nav--has-dropdown').find('a');
      addFocus($newFocus);
    }
  }

  function showDropdown ($el) {
    $el.addClass(activeClass);

    setTimeout(function() {
      timber.cache.$body.on('touchstart', function() {
        hideDropdown($el);
      });
    }, 250);
  }

  function hideDropdown ($el) {
    $el.removeClass(activeClass);
    timber.cache.$body.off('touchstart');
  }

  function addFocus ($el) {
    $el.addClass(focusClass);
  }

  function removeFocus ($el) {
    $el.removeClass(focusClass);
  }
};

timber.responsiveNav = function () {
  $(window).resize(function () {
    afterResize(function(){
      // Replace original nav items and remove more link
      timber.cache.$navigation.append($('#moreMenu--list').html());
      $('#moreMenu').remove();
      timber.alignMenu();
      timber.accessibleNav();
    }, 200, 'uniqueID');
  });
  timber.alignMenu();
  timber.accessibleNav();
};

timber.alignMenu = function () {
  var $nav = timber.cache.$navigation,
      w = 0,
      i = 0,
      wrapperWidth = $nav.outerWidth() - 101,
      menuhtml = '';

  if ( window.innerWidth < timber.cache.bpLarge ) {
    return;
  }

  $.each($nav.children(), function () {
    var $el = $(this);

    // Ignore hidden customer links (for mobile)
    if (!$el.hasClass('large-hide')) {
      w += $el.outerWidth(true);
    }

    if (wrapperWidth < w) {
      menuhtml += $('<div>').append($el.clone()).html();
      $el.remove();

      // Ignore hidden customer links (for mobile)
      if (!$el.hasClass('large-hide')) {
        i++;
      }
    }
  });

  if (wrapperWidth < w) {
    $nav.append(
      '<li id="moreMenu" class="site-nav--has-dropdown">'
        + '<a href="#">' + {{ 'layout.navigation.more' | t | json }} + '<span class="icon icon-arrow-down" aria-hidden="true"></span></a>'
        + '<ul id="moreMenu--list" class="site-nav__dropdown">' + menuhtml + '</ul></li>'
    );

    if (i <= 1) {
      // Bail, and replace original nav items
      timber.cache.$navigation.append($('#moreMenu--list').html());
      $('#moreMenu').remove();
    }
  }
};

timber.toggleMenu = function () {
  timber.cache.$menuToggle.on('click', function() {
    timber.cache.$body.toggleClass('show-nav');

    // Close ajax cart if open (keep selectors live, modal is inserted with JS)
    if ( $('#AjaxifyModal').hasClass('is-visible') ) {
      $('#AjaxifyModal').removeClass('is-visible');
      timber.cache.$body.addClass('show-nav');
    }
  });

  // Open sub navs on small screens
  timber.cache.$hasDropdownItem.on('click touchend', function(evt) {
    if (timber.cache.$body.hasClass('show-nav')) {
      var $el = $(this);

      if (!$el.hasClass('show-dropdown')) {
        evt.preventDefault();
        $el.addClass('show-dropdown');
      }

    };
  })
};

timber.sliders = function () {
  var $slider = timber.cache.$slider;

  if ( $slider.length ) {
    // Set optional parameters
    var auto = $slider.data('auto') ? $slider.data('auto') : false,
        rate = $slider.data('rate') ? $slider.data('rate') : 0;

    $slider.flexslider({
      animation: 'slide',
      animationSpeed: 500,
      pauseOnHover: true,
      keyboard: false,
      slideshow: auto,
      slideshowSpeed: rate,
      smoothHeight: true
    });
  }
};

timber.productPage = function (options) {
  var moneyFormat = options.money_format,
      variant = options.variant,
      selector = options.selector;

  // Selectors
  var $productImage = $('#ProductPhotoImg'),
      $addToCart = $('#AddToCart'),
      $productPrice = $('#ProductPrice'),
      $comparePrice = $('#ComparePrice'),
      $quantityElements = $('.quantity-selector, label + .js-qty'),
      $addToCartText = $('#AddToCartText');

  if (variant) {

    // Update variant image, if one is set
    if (variant.featured_image) {
      var newImg = variant.featured_image,
          el = $productImage[0];
      Shopify.Image.switchImage(newImg, el, timber.switchImage);
    }

    // Select a valid variant if available
    if (variant.available) {
      // Available, enable the submit button, change text, show quantity elements
      $addToCart.removeClass('disabled').prop('disabled', false);
      $addToCartText.html({{ 'products.product.add_to_cart' | t | json }});
      $quantityElements.show();
    } else {
      // Sold out, disable the submit button, change text, hide quantity elements
      $addToCart.addClass('disabled').prop('disabled', true);
      $addToCartText.html({{ 'products.product.sold_out' | t | json }});
      $quantityElements.hide();
    }

    // Regardless of stock, update the product price
    $productPrice.html( Shopify.formatMoney(variant.price, moneyFormat) );

    // Also update and show the product's compare price if necessary
    if (variant.compare_at_price > variant.price) {
      $comparePrice
        .html({{ 'products.product.compare_at' | t | json }} + ': ' + Shopify.formatMoney(variant.compare_at_price, moneyFormat))
        .show();
    } else {
      $comparePrice.hide();
    }

  } else {
    // The variant doesn't exist, disable submit button.
    // This may be an error or notice that a specific variant is not available.
    // To only show available variants, implement linked product options:
    //   - http://docs.shopify.com/manual/configuration/store-customization/advanced-navigation/linked-product-options
    $addToCart.addClass('disabled').prop('disabled', true);
    $addToCartText.html({{ 'products.product.unavailable' | t | json }});
    $quantityElements.hide();
  }
};

timber.productImageSwitch = function () {
  if (timber.cache.$thumbImages.length) {
    // Switch the main image with one of the thumbnails
    // Note: this does not change the variant selected, just the image
    timber.cache.$thumbImages.on('click', function(evt) {
      evt.preventDefault();
      var newImage = $(this).attr('href');
      timber.switchImage(newImage, null, timber.cache.$productImage);
    });
  }
};

timber.switchImage = function (src, imgObject, el) {
  // Make sure element is a jquery object
  var $el = $(el);
  $el.attr('src', src);

  {% if settings.product_image_zoom_enable %}
    // Update new image src to grande
    var zoomSrc = src.replace('_medium','_grande').replace('_large','_grande');
    $el.attr('data-zoom', zoomSrc);

    $(function() {
      timber.productImageZoom();
    });
  {% endif %}
};

timber.productImageZoom = function () {
  {% if settings.product_image_zoom_enable %}

    if (!timber.cache.$productImageWrap.length) {
      return;
    };

    // Destroy zoom (in case it was already set), then set it up again
    timber.cache.$productImageWrap.trigger('zoom.destroy');

    timber.cache.$productImageWrap.addClass('image-zoom').zoom({
      url: timber.cache.$productImage.attr('data-zoom')
    })
  {% endif %}
};

timber.socialSharing = function () {
  // General selectors
  var $buttons = timber.cache.$shareButtons,
      $shareLinks = $buttons.find('a'),
      permalink = $buttons.attr('data-permalink');

  // Share button selectors
  var $fbLink = $('.share-facebook'),
      $twitLink = $('.share-twitter'),
      $pinLink = $('.share-pinterest'),
      $googleLink = $('.share-google');

  if ( $fbLink.length ) {
    $.getJSON('https://graph.facebook.com/?id=' + permalink + '&callback=?', function(data) {
      if (data.shares) {
        $fbLink.find('.share-count').text(data.shares).addClass('is-loaded');
      } else {
        $fbLink.find('.share-count').remove();
      }
    });
  };

  if ( $twitLink.length ) {
    $.getJSON('https://cdn.api.twitter.com/1/urls/count.json?url=' + permalink + '&callback=?', function(data) {
      if (data.count > 0) {
        $twitLink.find('.share-count').text(data.count).addClass('is-loaded');
      } else {
        $twitLink.find('.share-count').remove();
      }
    });
  };

  if ( $pinLink.length ) {
    $.getJSON('https://api.pinterest.com/v1/urls/count.json?url=' + permalink + '&callback=?', function(data) {
      if (data.count > 0) {
        $pinLink.find('.share-count').text(data.count).addClass('is-loaded');
      } else {
        $pinLink.find('.share-count').remove();
      }
    });
  };

  if ( $googleLink.length ) {
    // Can't currently get Google+ count with JS, so just pretend it loaded
    $googleLink.find('.share-count').addClass('is-loaded');
  }

  // Share popups
  $shareLinks.on('click', function(e) {
    e.preventDefault();
    var el = $(this),
        popup = el.attr('class').replace('-','_'),
        link = el.attr('href'),
        w = 700,
        h = 400;

    // Set popup sizes
    switch (popup) {
      case 'share-twitter':
        h = 300;
        break;
      case 'share-fancy':
        w = 480;
        h = 720;
        break;
      case 'share-google':
        w = 500;
        break;
    }

    window.open(link, popup, 'width=' + w + ', height=' + h);
  });
}

timber.equalHeights = function () {
  $(window).load(function() {
    resizeElements();
  });

  $(window).resize(function() {
    afterResize(function() {
      resizeElements();
    }, 250, 'id');
  });

  function resizeElements() {
    timber.cache.$featuredImages.css('height', 'auto').equalHeights();
    timber.cache.$featuredBoxes.css('height', 'auto').equalHeights();
    timber.cache.$productGridImages.css('height', 'auto').equalHeights();
  }
};

timber.toggleFilters = function () {
  if ( timber.cache.$collectionFilters.length ) {
    timber.cache.$toggleFilterBtn.on('click', function() {
      timber.cache.$toggleFilterBtn.toggleClass('is-active');
      timber.cache.$collectionFilters.slideToggle(200);

      // Scroll to top of filters if user is down the page a bit
      if ( $(window).scrollTop() > timber.cache.$breadcrumbs.offset().top ) {
        $('html, body').animate({
          scrollTop: timber.cache.$breadcrumbs.offset().top
        });
      }
    });
  }
};

timber.formatMoney = function (val) {
  if (moneyFormat === {% raw %}'${{amount}}'{% endraw %}) {
    return val.replace('$','').replace('.','<sup>') + '</sup>';
  } else if (moneyFormat === {% raw %}'${{amount_with_comma_separator}}'{% endraw %}) {
    return val.replace('$','').replace(',','<sup>') + '</sup>';
  }
  return val;
};

timber.formatSaleTag = function (val) {
  if (moneyFormat === {% raw %}'${{amount}}'{% endraw %}) {
    return val.replace('.','<sup>') + '</sup>';
  } else if (moneyFormat === {% raw %}'${{amount_with_comma_separator}}'{% endraw %}) {
    return val.replace(',','<sup>') + '</sup>';
  }
  return val;
};

timber.responsiveVideos = function () {
  $('iframe[src*="youtube.com/embed"]').wrap('<div class="video-wrapper"></div>');
  $('iframe[src*="player.vimeo"]').wrap('<div class="video-wrapper"></div>');
};

// Initialize Timber's JS on docready
$(timber.init)


/******************* {{ 'jquery.flexslider.min.js' | asset_url | script_tag }} *******************/



/******************* {{ 'jquery.fancybox.pack.js' | asset_url | script_tag }} *******************/


/******************* {{ 'handlebars.min.js' | asset_url | script_tag }} *******************/


/******************* {{ 'shop.js' | asset_url | script_tag }} *******************/




/******************* {% include 'ajax-cart-template' %} *******************/
{% include 'ajax-cart-template' %}

/******************* {{ 'ajaxify.js' | asset_url | script_tag }} *******************/

